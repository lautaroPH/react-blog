{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/preparePosts.js","actions/post.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRoutes.js","actions/ui.js","helpers/fileUpload.js","components/blog/CreatePost.js","components/blog/ModalComment.js","components/blog/ModalPostDelete.js","components/blog/BlogDetail.js","components/blog/BlogCard.js","components/blog/BlogScreen.js","components/blog/BlogSearch.js","components/blog/BlogUser.js","components/ui/Footer.js","components/ui/Navbar.js","routers/BlogRoutes.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/authReducer.js","reducers/blogReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","BlogApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","preparePosts","posts","map","e","created_at","moment","toDate","updated_at","postAddNew","post","type","payload","postUpdated","postDeleted","postMoreLoading","page","dispatch","a","resp","json","ok","hasNextPage","postLoaded","postFailedLoaded","postLoadedMore","console","log","postUserMoreLoading","userId","docs","postDetailFailed","postMoreLoadingSearch","search","searchFailedLoaded","Swal","fire","nextPage","postDeleteStore","pageMoreOne","postLoadOne","commentAddNew","comments","activeComment","comment","commentUpdated","commentDeleted","startLogout","clear","logout","checkingFinish","login","user","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","email","password","formValues","className","onSubmit","preventDefault","setItem","Date","getTime","uid","surname","msg","startLogin","placeholder","onChange","pattern","required","to","RegisterScreen","password2","startRegister","AuthRoutes","exact","path","component","uiOpenModal","uiOpenDeleteModal","uiCloseDeleteModal","uiOpenCommentModal","fileUpload","file","formData","FormData","append","cloudResp","secure_url","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","initEvent","title","description","CreatePost","modalOpen","useSelector","state","ui","activePost","blog","titleValid","settitleValid","descriptionValid","setdescriptionValid","urlValid","seturlValid","setFormValues","useEffect","closeModal","handleFileChange","files","file_extension","split","pop","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","trim","length","id","getState","auth","_id","postStartAddNew","autoComplete","rows","accept","src","alt","ModalComment","modalCommentOpen","contentValid","setContentValid","postId","commentId","postUpdate","ModalPostDelete","modalDeleteOpen","history","useHistory","onClick","push","BlogDetail","activePostloading","location","useLocation","pathname","postLoadingOne","postDate","commentDate","role","format","BlogCard","BlogScreen","postPage","postNew","isEmpty","dataLength","next","hasMore","loader","textAlign","marginTop","BlogSearch","q","queryString","parse","BlogUser","userPage","Footer","Navbar","searchText","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","aria-haspopup","aria-labelledby","BlogRoutes","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","checking","isLoading","rootReducer","combineReducers","action","newPostsList","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","BlogApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAAMA,EAAUC,uDAGVC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAEtCC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAI3BQ,EAAgB,SAAET,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAEvCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAgB,QAAXV,EACME,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,MCtCrBY,EAGW,qCAHXA,EAKE,eALFA,EAQG,gBARHA,EAUI,kBAVJA,EAWK,mBAXLA,EAYI,uBAZJA,EAaQ,4BAbRA,EAcA,kBAdAA,EAeU,yBAfVA,EAgBW,0BAhBXA,EAiBW,0BAjBXA,EAkBY,2BAlBZA,EAmBW,yBAnBXA,EAoBI,uBApBJA,EAsBG,iBAtBHA,EAuBI,sBAvBJA,EAwBI,sBAxBJA,EAyBS,4BAzBTA,EA0BG,oBA1BHA,EA2BO,yBA3BPA,EA4BM,wBA5BNA,EA6BS,uBA7BTA,EA8BS,8BA9BTA,EA+BW,2BA/BXA,EAiCM,oBAjCNA,EAkCM,2BAlCNA,EAmCS,8BAnCTA,EAoCO,4BApCPA,EAqCO,4B,wCCnCPC,EAAe,WAAiB,IAAhBC,EAAe,uDAAP,GAEjC,OAAOA,EAAMC,KAAI,SAACC,GAAD,mBAAC,eACXA,GADU,IAEbC,WAAYC,IAAOF,EAAEC,YAAYE,SACjCC,WAAYF,IAAOF,EAAEI,YAAYD,eC6BnCE,EAAa,SAACC,GAAD,MAAW,CAC1BC,KAAMX,EACNY,QAASF,IAsBPG,EAAc,SAACH,GAAD,MAAW,CAC3BC,KAAMX,EACNY,QAASF,IA0BPI,EAAc,iBAAO,CACvBH,KAAMX,IAQGe,GAAkB,WAAe,IAAdC,EAAa,uDAAN,EACnC,8CAAO,WAAOC,GAAP,yBAAAC,EAAA,kEAEc,IAATF,EAFL,iCAGwB9B,EAAc,SAHtC,cAGWiC,EAHX,gBAIwBA,EAAKC,OAJ7B,QAIW3B,EAJX,QAMc4B,IACCnB,EAAQD,EAAaR,EAAKS,OAChCe,EAASK,GAAY7B,EAAK6B,cAC1BL,EAASM,GAAWrB,KAEpBe,EAASO,MAXlB,yCAcwBtC,EAAc,SAAD,OAAU8B,IAd/C,eAcWG,EAdX,iBAewBA,EAAKC,OAf7B,SAeW3B,EAfX,QAiBc4B,IACCnB,EAAQD,EAAaR,EAAKS,OAChCe,EAASK,GAAY7B,EAAK6B,cAC1BL,EAASQ,GAAevB,KAExBe,EAASO,MAtBlB,0DA2BCE,QAAQC,IAAR,MA3BD,0DAAP,uDAgCSC,GAAsB,SAACC,GAAsB,IAAdb,EAAa,uDAAN,EAC/C,8CAAO,WAAOC,GAAP,yBAAAC,EAAA,kEAEc,IAATF,EAFL,iCAGwB9B,EAAc,oBAAD,OAAqB2C,IAH1D,cAGWV,EAHX,gBAIwBA,EAAKC,OAJ7B,QAIW3B,EAJX,QAKc4B,IACCnB,EAAQD,EAAaR,EAAKS,MAAM4B,MACtCb,EAASK,GAAY7B,EAAKS,MAAMoB,cAChCL,EAASM,GAAWrB,MAEpBe,EAASO,MACTP,EAASc,OAXlB,yCAewB7C,EAAc,oBAAD,OAAqB2C,EAArB,YAA+Bb,IAfpE,eAeWG,EAfX,iBAgBwBA,EAAKC,OAhB7B,SAgBW3B,EAhBX,QAkBc4B,IACCnB,EAAQD,EAAaR,EAAKS,MAAM4B,MACtCb,EAASK,GAAY7B,EAAKS,MAAMoB,cAChCL,EAASQ,GAAevB,KAExBe,EAASO,MAvBlB,0DA6BCE,QAAQC,IAAR,MA7BD,0DAAP,uDAkCSK,GAAwB,SAACC,GAAsB,IAAdjB,EAAa,uDAAN,EACjD,8CAAO,WAAOC,GAAP,yBAAAC,EAAA,kEAEc,IAATF,EAFL,iCAGwB9B,EAAc,gBAAD,OAAiB+C,IAHtD,cAGWd,EAHX,gBAIwBA,EAAKC,OAJ7B,QAIW3B,EAJX,QAMc4B,IACCnB,EAAQD,EAAaR,EAAKS,MAAM4B,MACtCb,EAASK,GAAY7B,EAAKS,MAAMoB,cAChCL,EAASM,GAAWrB,MAGpBe,EAASiB,MACTC,IAAKC,KAAK,gCAAiCH,EAAQ,UAb5D,yCAgBwB/C,EAAc,iBAAD,OAAkB+C,EAAlB,YAA4BjB,IAhBjE,eAgBWG,EAhBX,iBAiBwBA,EAAKC,OAjB7B,SAiBW3B,EAjBX,QAmBc4B,IACCnB,EAAQD,EAAaR,EAAKS,MAAM4B,MACtCb,EAASK,GAAY7B,EAAKS,MAAMoB,cAChCL,EAASQ,GAAevB,KAExBe,EAASO,MAxBlB,0DA6BCE,QAAQC,IAAR,MA7BD,0DAAP,uDAkCSI,GAAmB,iBAAO,CACnCpB,KAAMX,IAIJsB,GAAc,SAACe,GAAD,MAAe,CAC/B1B,KAAMX,EACNY,QAASyB,IAGPd,GAAa,SAACrB,GAAD,MAAY,CAC3BS,KAAMX,EACNY,QAASV,IAGPgC,GAAqB,iBAAO,CAC9BvB,KAAMX,IAGGsC,GAAkB,iBAAO,CAClC3B,KAAMX,IAGJyB,GAAiB,SAACvB,GAAD,MAAY,CAC/BS,KAAMX,EACNY,QAASV,IAGPsB,GAAmB,iBAAO,CAC5Bb,KAAMX,IAGGuC,GAAc,SAACvB,GAAD,MAAW,CAClCL,KAAMX,EACNY,QAASI,EAAO,IA2BdwB,GAAc,SAAC9B,GAAD,MAAW,CAC3BC,KAAMX,EACNY,QAASF,IAiCP+B,GAAgB,SAACC,GAAD,MAAe,CACjC/B,KAAMX,EACNY,QAAS8B,IAGAC,GAAgB,SAACC,GAAD,MAAc,CACvCjC,KAAMX,EACNY,QAASgC,IA0BPC,GAAiB,SAACD,GAAD,MAAc,CACjCjC,KAAMX,EACNY,QAASgC,IA2BPE,GAAiB,SAACF,GAAD,MAAc,CACjCjC,KAAMX,EACNY,QAASgC,IC3RAG,GAAc,WACvB,OAAO,SAAC9B,GAEJnB,aAAakD,QACb/B,EAASgC,MACThC,EDyRyB,CAC7BN,KAAMX,MCtRJiD,GAAS,iBAAO,CAAEtC,KAAMX,IAExBkD,GAAiB,iBAAO,CAAEvC,KAAMX,IAEhCmD,GAAQ,SAACC,GAAD,MAAW,CACrBzC,KAAMX,EACNY,QAASwC,I,iBCzFAC,GAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,oBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,mBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,gBCsDzBK,GArEK,WAEhB,IAAM9C,EAAW+C,cAFK,EAKkBX,GAAQ,CAC5CY,MAAO,GACPC,SAAU,KAPQ,oBAKfC,EALe,KAKHR,EALG,KAUdM,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAQf,OACI,sBAAKE,UAAU,iBAAf,SACI,uBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,SACf,sBAAKA,UAAU,SAAf,qBACA,sBAAKA,UAAU,YAAf,8CAEA,uBAAKA,UAAU,SAAf,UACI,wBAAMC,SAdF,SAACjE,GACjBA,EAAEkE,iBAEFrD,EFhBkB,SAACgD,EAAOC,GAC9B,8CAAO,WAAOjD,GAAP,iBAAAC,EAAA,sEAEgBhC,EAAc,OAAQ,CAAE+E,QAAOC,YAAY,QAF3D,cAEG/C,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG3B,EAHH,QAKM4B,IACLvB,aAAayE,QAAQ,QAAS9E,EAAKI,OACnCC,aAAayE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAASkC,GAAM,CACXuB,IAAKjF,EAAKiF,IACVb,KAAMpE,EAAKoE,KACXc,QAASlF,EAAKkF,YAGlBxC,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAf9B,2CAAP,sDEeaC,CAAWZ,EAAOC,KAWf,UACI,sBAAKE,UAAU,UAAf,SACI,wBACIzD,KAAK,QACLyD,UAAU,4BACVU,YAAY,SACZjB,KAAK,QACLC,MAAOG,EACPc,SAAUpB,EACVqB,QAAQ,0CACRC,UAAQ,MAIhB,sBAAKb,UAAU,gBAAf,SACI,wBACIzD,KAAK,WACLyD,UAAU,yBACVU,YAAY,gBACZjB,KAAK,WACLC,MAAOI,EACPa,SAAUpB,EACVsB,UAAQ,MAIhB,wBACItE,KAAK,SACLyD,UAAU,QACVN,MAAM,aAKd,sBAAKM,UAAU,OAAf,SACI,eAAC,IAAD,CAAMc,GAAG,4BAAT,kCCuDTC,GAnHQ,WAEnB,IAAMlE,EAAW+C,cAFQ,EAIeX,GAAQ,CAC5CQ,KAAM,GACNc,QAAS,GACTV,MAAO,GACPC,SAAU,GACVkB,UAAW,KATU,oBAIlBjB,EAJkB,KAINR,EAJM,KAYjBE,EAA8CM,EAA9CN,KAAMc,EAAwCR,EAAxCQ,QAASV,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUkB,EAAcjB,EAAdiB,UAYxC,OACI,sBAAKhB,UAAU,iBAAf,SACI,uBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,SACf,sBAAKA,UAAU,SAAf,sBACA,sBAAKA,UAAU,YAAf,4CAEA,uBAAKA,UAAU,SAAf,UACI,wBAAMC,SAlBC,SAACjE,GAGpB,GAFAA,EAAEkE,iBAEEJ,IAAakB,EACb,OAAOjD,IAAKC,KAAK,QAAS,0CAAwC,SAGtEnB,EHFqB,SAACgD,EAAOC,EAAUL,EAAMc,GACjD,8CAAO,WAAO1D,GAAP,iBAAAC,EAAA,sEAEgBhC,EAAc,gBAAiB,CAAE+E,QAAOC,WAAUL,OAAMc,WAAW,QAFnF,cAEGxD,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG3B,EAHH,QAKM4B,IACLvB,aAAayE,QAAQ,QAAS9E,EAAKI,OACnCC,aAAayE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAASkC,GAAM,CACXuB,IAAKjF,EAAKiF,IACVb,KAAMpE,EAAKoE,KACXc,QAASlF,EAAKkF,YAGlBxC,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAf9B,2CAAP,sDGCaS,CAAcpB,EAAOC,EAAUL,EAAMc,KAWlC,UACI,sBAAKP,UAAU,UAAf,SACI,wBACIzD,KAAK,OACLyD,UAAU,4BACVU,YAAY,SACZjB,KAAK,OACLC,MAAOD,EACPkB,SAAUpB,EACVqB,QAAQ,YACRC,UAAQ,MAIhB,sBAAKb,UAAU,UAAf,SACI,wBACIzD,KAAK,OACLyD,UAAU,4BACVU,YAAY,YACZjB,KAAK,UACLC,MAAOa,EACPI,SAAUpB,EACVqB,QAAQ,YACRC,UAAQ,MAIhB,sBAAKb,UAAU,UAAf,SACI,wBACIzD,KAAK,QACLyD,UAAU,4BACVU,YAAY,SACZjB,KAAK,QACLC,MAAOG,EACPc,SAAUpB,EACVqB,QAAQ,0CACRC,UAAQ,MAKhB,sBAAKb,UAAU,gBAAf,SACI,wBACIzD,KAAK,WACLyD,UAAU,yBACVU,YAAY,gBACZjB,KAAK,WACLC,MAAOI,EACPa,SAAUpB,EACVsB,UAAQ,MAIhB,sBAAKb,UAAU,gBAAf,SACI,wBACIzD,KAAK,WACLyD,UAAU,yBACVU,YAAY,0BACZjB,KAAK,YACLC,MAAOsB,EACPL,SAAUpB,EACVsB,UAAQ,MAKhB,wBACItE,KAAK,SACLyD,UAAU,QACVN,MAAM,mBAKd,sBAAKM,UAAU,OAAf,SACI,eAAC,IAAD,CAAMc,GAAG,yBAAT,iCCjGTI,GAbI,WACf,OAEI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAW1B,KACtD,eAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,4BAA4BC,UAAWN,KAEzD,eAAC,IAAD,CAAUD,GAAG,+BCTZQ,GAAc,iBAAO,CAC9B/E,KAAMX,IAOG2F,GAAoB,iBAAO,CACpChF,KAAMX,IAGG4F,GAAqB,iBAAO,CACrCjF,KAAMX,IAIG6F,GAAqB,iBAAO,CACrClF,KAAMX,I,oBClBG8F,GAAU,uCAAG,WAAOC,GAAP,mBAAA7E,EAAA,4DAEL,oDAEX8E,EAAW,IAAIC,UACZC,OAAO,gBAAiB,cACjCF,EAASE,OAAO,OAAQH,GANF,kBAUCxG,MARN,mDAQsB,CAC/BF,OAAQ,OACRI,KAAMuG,IAZQ,YAUZ7E,EAVY,QAeTE,GAfS,kCAgBUF,EAAKC,OAhBf,eAgBR+E,EAhBQ,yBAiBPA,EAAUC,YAjBH,QAmBdjE,IAAKC,KAAK,QAAS,2BAA4B,SAnBjC,0DAuBlBD,IAAKC,KAAK,QAAV,KAAwB,SAvBN,0DAAH,sDCOjBiE,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAInBC,KAAMC,cAAc,SAEpB,IAAMC,GAAY,CACdC,MAAO,GACPC,YAAa,GACb3H,IAAK,IAmLM4H,GAhLI,WAAM,IAGbC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAzCH,UACAI,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAA1CD,WAEFtG,EAAW+C,cANI,EAQeT,oBAAS,GARxB,oBAQdkE,EARc,KAQFC,EARE,OAS2BnE,oBAAS,GATpC,oBASdoE,EATc,KASIC,EATJ,OAUWrE,oBAAS,GAVpB,oBAUdsE,EAVc,KAUJC,EAVI,OAYevE,mBAASwD,IAZxB,oBAYd5C,EAZc,KAYF4D,EAZE,KAabf,EAA4B7C,EAA5B6C,MAAOC,EAAqB9C,EAArB8C,YAAa3H,EAAQ6E,EAAR7E,IAE5B0I,qBAAU,WAEFD,EADAR,GAGcR,MAEnB,CAACQ,IAEJ,IAAMU,EAAa,WACfhH,EF9C2B,CAC/BN,KAAMX,IE8CGuH,GACDQ,EAAchB,KAIhBpD,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBmE,EAAc,2BACP5D,GADM,mBAERP,EAAOC,KAAOD,EAAOE,UAIxBoE,EAAgB,uCAAG,WAAO9H,GAAP,qBAAAc,EAAA,yDACf6E,EAAO3F,EAAEwD,OAAOuE,MAAM,GACtBC,EAFe,OAEErC,QAFF,IAEEA,GAFF,UAEEA,EAAMlC,YAFR,aAEE,EAAYwE,MAAM,KAAKC,MAFzB,yCAIV,MAJU,UAME,QAAnBF,GAA+C,QAAnBA,GAA+C,SAAnBA,GAAgD,QAAnBA,GAA+C,SAAnBA,EANhG,wBAOjBjG,IAAKC,KAAK,CACN4E,MAAO,cACPuB,KAAM,qBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,WACNvG,IAAKwG,iBAbI,SAiBK7C,GAAWC,GAjBhB,OAiBX6C,EAjBW,OAkBjBb,EAAc,2BACP5D,GADM,IAET7E,IAAKsJ,KAETzG,IAAK0G,QAtBY,wBAwBjB1G,IAAKC,KAAK,QAAS,2BAA4B,SAxB9B,4CAAH,sDAwDtB,OACI,qCACI,gBAAC,KAAD,CACI0G,OAAQ3B,EACR4B,eAAgBd,EAChBe,MAAO3C,GACP4C,eAAgB,IAChB7E,UAAU,QACV8E,iBAAiB,cANrB,UAQI,qBAAI9E,UAAU,OAAd,SAAuBmD,EAAc,cAAgB,eACrD,wBACA,wBAAMlD,SAvCO,SAACjE,GAGtB,OAFAA,EAAEkE,iBAEE0C,EAAMmC,OAAOC,OAAS,EACf1B,GAAc,GAGrBT,EAAYkC,OAAOC,OAAS,GACrBxB,GAAoB,GAG3BtI,EAAI6J,OAAOC,OAAS,EACbtB,GAAY,IAInB7G,EADAsG,GRpEoB7G,EQqEKyD,ERpEjC,uCAAO,WAAOlD,GAAP,iBAAAC,EAAA,+EAEoBtB,EAAc,SAAD,OAAUc,EAAK2I,IAAM3I,EAAM,OAF5D,cAEOS,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO3B,EAHP,QAKU4B,IACLJ,EAASJ,EAAYH,IAErByB,IAAKC,KAAK,oCAAqC1B,EAAKsG,MAAO,SAE3D7E,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAVlC,kDAaClD,QAAQC,IAAR,MAbD,0DAAP,uDArC2B,SAACjB,GAC5B,8CAAO,WAAOO,EAAUqI,GAAjB,yBAAApI,EAAA,+DAE4BoI,IAAWC,KAAlC7E,EAFL,EAEKA,IAAKb,EAFV,EAEUA,KAAMc,EAFhB,EAEgBA,QAFhB,kBAKoB/E,EAAc,QAASc,EAAM,QALjD,cAKOS,EALP,gBAMoBA,EAAKC,OANzB,QAMO3B,EANP,QAQU4B,KACLX,EAAK2I,GAAK5J,EAAKiB,KAAK2I,GACpB3I,EAAK0C,KAAO,CACRoG,IAAK9E,EACLb,KAAMA,EACNc,QAASA,GAGb1D,EAASR,EAAWC,IAEpByB,IAAKC,KAAK,iBAAkB1B,EAAKsG,MAAO,YAlB7C,kDAsBCtF,QAAQC,IAAR,MAtBD,0DAAP,wDQ0GiB8H,CAAgBtF,IAE7B8D,IACAP,GAAc,GACdE,GAAoB,QACpBE,GAAY,IR5EW,IAACpH,GQ4FkB0D,UAAU,YAA5C,UACI,uBAAKA,UAAU,aAAf,UACI,4CACA,wBACIzD,KAAK,OACLyD,UAAS,wBAAmBqD,GAAc,cAC1C3C,YAAY,qBACZjB,KAAK,QACLC,MAAOkD,EACP0C,aAAa,MACb3E,SAAUpB,EACVsB,UAAQ,KAEVwC,GACE,wBAAO4B,GAAG,YAAYjF,UAAU,wBAAhC,6CAIR,uBAAKA,UAAU,aAAf,UACI,iDACA,2BACIA,UAAS,iCAA4BuD,GAAoB,cACzD7C,YAAY,yBACZjB,KAAK,cACLC,MAAOmD,EACP0C,KAAK,IACL5E,SAAUpB,EACVsB,UAAQ,KAEV0C,GACE,wBAAO0B,GAAG,YAAYjF,UAAU,wBAAhC,kDAKR,uBAAKA,UAAU,sBAAf,UACI,oBAAGiF,GAAG,QAAN,0BAEA,wBACIA,GAAG,eACH1I,KAAK,OACLyD,UAAU,wBACVP,KAAK,MACLkB,SAAUmD,EACV0B,OAAO,aAET/B,GACE,wBAAOwB,GAAG,YAAYjF,UAAU,wBAAhC,yCAGP9E,EAAI8J,OAAS,GACV,uCACI,sBAAMS,IAAKvK,EAAKwK,IAAK9C,EAAO5C,UAAU,iBACtC,2BAIR,0BACIzD,KAAK,SACLyD,UAAU,uBAFd,UAII,oBAAGA,UAAU,gBACb,uBAAMA,UAAU,OAAhB,iCC7LlBiC,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,0BAInBC,KAAMC,cAAc,SAEpB,IAAMC,GAAY,CACdT,QAAS,IAmGEyD,GA/FM,WAAO,IAEhBC,EAAqB5C,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAhD0C,iBAFe,EAGe5C,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAAzDD,EAHe,EAGfA,WAAY5E,EAHG,EAGHA,cAEd1B,EAAW+C,cALM,EAOiBT,oBAAS,GAP1B,oBAOhB0G,EAPgB,KAOFC,EAPE,OASa3G,mBAASwD,IATtB,oBAShB5C,EATgB,KASJ4D,EATI,KAUfzB,EAAYnC,EAAZmC,QAGR0B,qBAAU,WAEFD,EADApF,GAGcoE,MAEnB,CAACpE,IAGJ,IAAMsF,EAAa,WACfhH,EHvBkC,CACtCN,KAAMX,IGuBF+H,EAAchB,IACVpE,GACA1B,ETiQ2B,CACnCN,KAAMX,KStON,OACI,gBAAC,KAAD,CACI8I,OAAQkB,EACRjB,eAAgBd,EAChBe,MAAO3C,GACP4C,eAAgB,IAChB7E,UAAU,QACV8E,iBAAiB,cANrB,UAQI,qBAAI9E,UAAU,OAAd,SAAuBzB,EAAiB,oBAAsB,qBAC9D,wBACA,wBAAM0B,SA5BW,SAACjE,GAGtB,GAFAA,EAAEkE,iBAEEgC,EAAQ6C,OAAOC,OAAS,EACxB,OAAOc,GAAgB,GT2MJ,IAACxH,EAAUyH,EA2CPvH,EAASwH,ESlPhCnJ,EADA0B,GTmPuBC,ESlPKuB,ETkPIiG,ESlPL,OAAazH,QAAb,IAAaA,OAAb,EAAaA,EAAe6G,ITmP/D,uCAAO,WAAOvI,GAAP,iBAAAC,EAAA,+EAEoBtB,EAAc,YAAD,OAAawK,GAAaxH,EAAS,OAFpE,cAEOzB,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO3B,EAHP,QAKU4B,IACLJ,EAAS4B,GAAepD,EAAK4K,aAE7BlI,IAAKC,KAAK,gDAAiD,GAAI,SAE/DD,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAVlC,kDAaClD,QAAQC,IAAR,MAbD,0DAAP,wDA5C4Be,ESrMCyB,ETqMSgG,ESrMG5C,EAAW8B,GTsMpD,uCAAO,WAAOpI,EAAUqI,GAAjB,yBAAApI,EAAA,+DAE4BoI,IAAWC,KAAlC7E,EAFL,EAEKA,IAAKb,EAFV,EAEUA,KAAMc,EAFhB,EAEgBA,QAFhB,kBAKoB/E,EAAc,YAAD,OAAauK,GAAUzH,EAAU,QALlE,cAKOvB,EALP,gBAMoBA,EAAKC,OANzB,QAMO3B,EANP,QAOU4B,KACLqB,EAASU,KAAO,CACZoG,IAAK9E,EACLb,KAAMA,EACNc,QAASA,GAGb1D,EAASwB,GAAchD,EAAKiB,OAE5ByB,IAAKC,KAAK,0CAA2C,GAAI,YAhB9D,kDAoBCV,QAAQC,IAAR,MApBD,0DAAP,0DSpMIsG,IACAiC,GAAgB,IAesB9F,UAAU,YAA5C,UACI,uBAAKA,UAAU,aAAf,UACI,+CACA,2BACIA,UAAS,kCAA6B6F,GAAgB,cACtDnF,YAAY,2BACZjB,KAAK,UACLC,MAAOwC,EACPqD,KAAK,KACL5E,SA5CM,SAAC,GAAgB,IAAdnB,EAAa,EAAbA,OACzBmE,EAAc,2BACP5D,GADM,mBAERP,EAAOC,KAAOD,EAAOE,UA0CVmB,UAAQ,KAEVgF,GACE,wBAAOZ,GAAG,YAAYjF,UAAU,wBAAhC,gDAIR,0BACIzD,KAAK,SACLyD,UAAU,uBAFd,UAII,oBAAGA,UAAU,gBACb,uBAAMA,UAAU,OAAhB,+BCvGdiC,I,MAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRE,UAAW,2BAoDJ0D,GA/CS,WAAO,IAEnBC,EAAoBnD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAA/CiD,gBACA5H,EAAkByE,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAA7C7E,cAEF1B,EAAW+C,cAEXwG,EAAUC,cAEVxC,EAAa,WACfhH,EAAS2E,OAab,OACI,gBAAC,KAAD,CACIkD,OAAQyB,EACRxB,eAAgBd,EAChBe,MAAO3C,GACP4C,eAAgB,IAChB7E,UAAU,eACV8E,iBAAiB,cANrB,UAQI,qBAAI9E,UAAU,OAAd,SAAsBzB,EAAgB,2DAAuD,uDAE7F,yBAAQyB,UAAU,sBAAsBsG,QArB3B,WACb/H,EACA1B,EV8SR,uCAAO,WAAOA,EAAUqI,GAAjB,qBAAApI,EAAA,6DAEKmI,EAAOC,IAAW9B,KAAKD,WAAvB8B,GACAG,EAAQF,IAAW9B,KAAK7E,cAAxB6G,IAHL,kBAMoB5J,EAAc,YAAD,OAAayJ,EAAb,YAAmBG,GAAO,GAAI,UAN/D,cAMOrI,EANP,gBAOoBA,EAAKC,OAPzB,QAOO3B,EAPP,QASU4B,IACLJ,EAAS6B,GAAerD,EAAKiB,OAC7ByB,IAAKC,KAAK,8CAA+C,GAAI,YAG7DD,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAdlC,kDAkBClD,QAAQC,IAAR,MAlBD,0DAAP,0DU5SQV,EV+BR,uCAAO,WAAOA,EAAUqI,GAAjB,uBAAApI,EAAA,+DAEmBoI,IAAW9B,KAAKD,WAA9B8B,EAFL,EAEKA,GAAIrC,EAFT,EAESA,MAFT,kBAKoBpH,EAAc,SAAD,OAAUyJ,GAAM,GAAI,UALrD,cAKOlI,EALP,gBAMoBA,EAAKC,OANzB,QAMO3B,EANP,QAQU4B,IACLJ,EAASH,KACTqB,IAAKC,KAAK,gCAAiC4E,EAAO,YAGlD7E,IAAKC,KAAK,QAAS3C,EAAKmF,IAAK,SAblC,kDAiBClD,QAAQC,IAAR,MAjBD,0DAAP,yDU9BQ6I,EAAQG,KAAK,iBAEjB1J,EAAS2E,OAcL,mBAGA,yBACIxB,UAAU,oBACVsG,QAASzC,EAFb,oBC6FG2C,GA1II,WAAO,IAAD,MAGblG,EAAQ0C,aAAY,SAAAC,GAAK,OAAIA,EAAMkC,QAAnC7E,IAHa,EAIqB0C,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAA7DD,EAJa,EAIbA,WAAYsD,EAJC,EAIDA,kBAEd5J,EAAW+C,cAEX8G,EAAWC,cAEUD,EAASE,SAAS3C,MAAM,KAAK,IAEpDvI,aAAayE,QAAQ,SAAUuG,EAASE,SAAS3C,MAAM,KAAK,IAGhE,IAAMmC,EAAUC,cAEhBzC,qBAAU,WACN/G,EAASqB,MACV,CAACrB,IAEJ,IAAMkJ,EAASrK,aAAaC,QAAQ,WAAa,GAEjDiI,qBAAU,WACa,OAAfT,GACe,KAAX4C,GACAlJ,EX8Mc,SAACkJ,GAC3B,8CAAO,WAAOlJ,GAAP,iBAAAC,EAAA,+EAEoBhC,EAAc,gBAAD,OAAiBiL,IAFlD,cAEOhJ,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO3B,EAHP,QAKU4B,GACLJ,EAASuB,GAAY/C,EAAKiB,QAE1BO,EAASO,MACTP,EAASc,MACTI,IAAKC,KAAK,QAAS,4BAA6B,UAVrD,kDAaCV,QAAQC,IAAR,MAbD,0DAAP,sDW/MqBsJ,CAAed,MAGjC,CAAClJ,EAAUkJ,EAAQ5C,IAGjBsD,GACDL,EAAQG,KAAK,gBAGjB,IAAMO,EAAW5K,IAAM,OAACiH,QAAD,IAACA,OAAD,EAACA,EAAYlH,YAuB9BqC,EAAQ,OAAG6E,QAAH,IAAGA,OAAH,EAAGA,EAAY7E,SAEvByI,EAAc7K,IAAM,OAACoC,QAAD,IAACA,OAAD,EAACA,EAAUrC,YAGrC,OACI,iCACoB,OAAfkH,EAAsB,sBAAKnD,UAAU,gCAAf,SACnB,sBAAKA,UAAU,qBAAqBgH,KAAK,SAAzC,SACI,uBAAMhH,UAAU,UAAhB,4BAGF,uBAAKA,UAAU,4BAAf,UACE,uBAAKA,UAAU,wCAAf,UACI,qBAAIA,UAAU,OAAd,gBAAsBmD,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAYP,QAClC,wBACA,uBAAK5C,UAAU,qCAAf,UACI,qBAAGA,UAAU,iBAAb,UACI,wBAAMA,UAAU,sBAAhB,iBAAuCmD,QAAvC,IAAuCA,GAAvC,UAAuCA,EAAYnE,YAAnD,aAAuC,EAAkBS,KAAzD,WAAgE0D,QAAhE,IAAgEA,GAAhE,UAAgEA,EAAYnE,YAA5E,aAAgE,EAAkBuB,WAClF,uBAAMP,UAAU,8BAAhB,SAA+C8G,EAASG,OAAO,qBAE/D,yBAAQjH,UAAU,2DAA2DsG,QA9BtF,WACfF,EAAQG,KAAR,6BAAmCpD,EAAWnE,KAAKoG,OA6B3B,yBACW,OAAVjC,QAAU,IAAVA,GAAA,UAAAA,EAAYnE,YAAZ,eAAkBoG,OAAQ9E,GACvB,uCACI,0BAAQN,UAAU,yCAAyCsG,QA7CzE,WAClBzJ,EAASyE,OA4CuB,UAAmF,oBAAGtB,UAAU,gBAAhG,aACA,0BAAQA,UAAU,wCAAwCsG,QA1CzE,WACjBzJ,EAAS0E,OAyCuB,UAAiF,oBAAGvB,UAAU,iBAA9F,qBAIhB,2BAEJ,sBAAKA,UAAU,kDAAkDyF,IAAG,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAYjI,IAAKwK,IAAG,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAYP,QACxG,oBAAG5C,UAAU,yDAAb,gBAAuEmD,QAAvE,IAAuEA,OAAvE,EAAuEA,EAAYN,cACnF,sBAAK7C,UAAU,gBAGvB,eAAC,GAAD,IACA,eAAC,GAAD,IACA,uBAAKA,UAAU,YAAf,UAEKmD,GACG,uBAAKnD,UAAU,sCAAf,UACI,wBACA,8CACA,yBAAQA,UAAU,+BAA+BsG,QAzD/C,WAClBzJ,EAAS4E,OAwDO,yBAIc,KAAb,OAARnD,QAAQ,IAARA,OAAA,EAAAA,EAAU0G,SAAgB7B,EAAa,qBAAInD,UAAU,gDAAd,iEAAvC,OACG1B,QADH,IACGA,OADH,EACGA,EAAUvC,KAAI,SAAAyC,GAAY,IAAD,MACrB,OACI,qBAAIwB,UAAU,oFAAd,SAEI,sBAAIA,UAAU,+CAAd,UACI,uBAAMA,UAAU,sBAAhB,UACY,OAAPxB,QAAO,IAAPA,GAAA,UAAAA,EAASQ,YAAT,eAAeS,MAAO,KAAtB,OAA4BjB,QAA5B,IAA4BA,GAA5B,UAA4BA,EAASQ,YAArC,aAA4B,EAAeuB,WAEhD,uBAAMP,UAAU,yBAAhB,SACK+G,EAAYE,OAAO,kBAExB,uBAAMjH,UAAU,UAAhB,gBACKxB,QADL,IACKA,OADL,EACKA,EAAS0D,WAEN,OAAP1D,QAAO,IAAPA,GAAA,UAAAA,EAASQ,YAAT,eAAeoG,OAAQ9E,GACpB,uCACI,yBAAQN,UAAU,oCAAoCsG,QAAS,kBAAOzJ,EAAS0B,GAAcC,GAAU3B,EAAS0E,QAAhH,oBACA,yBAAQvB,UAAU,0CAA0CsG,QAAS,kBAAOzJ,EAAS0B,GAAcC,GAAU3B,EAAS4E,QAAtH,2BAfuFjD,EAAQ4G,WAuB/H,eAAC,GAAD,QCvHG8B,I,MApBE,SAAC,GAMX,IALHjC,EAKE,EALFA,GACArC,EAIE,EAJFA,MACAC,EAGE,EAHFA,YACA5G,EAEE,EAFFA,WACA+C,EACE,EADFA,KAGM8H,EAAW5K,IAAOD,GAExB,OACI,uBAAK+D,UAAU,gDAAf,UACI,8BAAM4C,IACN,qBAAG5C,UAAU,iBAAb,UAA+BhB,EAAKS,KAApC,IAA2CT,EAAKuB,QAAhD,MAA4DuG,EAASG,OAAO,mBAC5E,oBAAGjH,UAAU,mBAAb,SAAiC6C,IACjC,eAAC,IAAD,CAAM/B,GAAE,2BAAsBmE,GAAMjF,UAAU,gBAA9C,8B,SC2EGmH,GApFI,WAAO,IAAD,EAE6BnE,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAArEtH,EAFa,EAEbA,MAAOsL,EAFM,EAENA,SAAUC,EAFJ,EAEIA,QAASnK,EAFb,EAEaA,YAE5BL,EAAW+C,cAEjBgE,qBAAU,WAEe,IAAjB9H,EAAMkJ,QACNnI,EAASF,QAGd,CAACE,EAAUf,IAEd8H,qBAAU,WAEFwD,GAAY,GACZvK,EAASF,GAAgByK,MAE9B,CAACvK,EAAUuK,IAEdxD,qBAAU,WACN/G,EAASqB,QAEV,CAACrB,IAEJ+G,qBAAU,WACFyD,IACAxK,EAASqB,MACTrB,EbqDoB,CAC5BN,KAAMX,OapDH,CAACiB,EAAUwK,IAEd,IAIMC,EAA2B,IAAjBxL,EAAMkJ,OAEtB,OACI,uBAAKhF,UAAU,YAAf,UACI,uBAAKA,UAAU,gBAAf,UACI,qBAAIA,UAAU,SAAd,wBAGA,qBAAGA,UAAU,YAAb,2CAAuD,uBAAMA,UAAU,oBAAoBsG,QAZrF,WACdzJ,EAASyE,OAWsD,6BACvD,eAAC,KAAD,CACIiG,WAAYzL,EAAMkJ,OAClBwC,KAAM,kBAAM3K,EAASsB,GAAYiJ,KACjCK,SAAS,EACTC,OAAQxK,IAAgBoK,GACpB,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAPhB,SAaKsH,EACG,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAIRlE,EAAMC,KAAI,SAAAO,GACN,OAAQ,eAAC,GAAD,eAA4BA,GAAbA,EAAK2I,UAKtC/H,IAAgBoK,GACd,oBAAG1C,MAAO,CAAE+C,UAAW,SAAUC,UAAW,QAA5C,SACI,oEAKZ,eAAC,GAAD,Q,oBCKGC,GArFI,WAAO,IAAD,EAE4B7E,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAApEtH,EAFa,EAEbA,MAAOoB,EAFM,EAENA,YAAakK,EAFP,EAEOA,SAAUvJ,EAFjB,EAEiBA,OAEhChB,EAAW+C,cAEX8G,EAAWC,cACXP,EAAUC,cAERyB,EAAMC,KAAYC,MAAMtB,EAAS7I,QAAjCiK,EAERlE,qBAAU,WAEe,IAAjB9H,EAAMkJ,QACNnI,EAASe,GAAsBkK,MAGpC,CAACjL,EAAUf,EAAOgM,IAErBlE,qBAAU,WAEFwD,GAAY,GACZvK,EAASe,GAAsBkK,EAAGV,MAEvC,CAACvK,EAAUuK,EAAUU,IAExBlE,qBAAU,WAEN/G,EAASqB,QAEV,CAACrB,IAEJ+G,qBAAU,WACD/F,GACDuI,EAAQG,KAAK,kBAElB,CAAC1I,EAAQuI,IAKZ,IAAMkB,EAA2B,IAAjBxL,EAAMkJ,OAEtB,OACI,sBAAKhF,UAAU,YAAf,SACI,uBAAKA,UAAU,gBAAf,UACI,sBAAIA,UAAU,SAAd,gDACwC8H,KAExC,eAAC,KAAD,CACIP,WAAYzL,EAAMkJ,OAClBwC,KAAM,kBAAM3K,EAASsB,GAAYiJ,KACjCK,SAAS,EACTC,OAAQxK,IAAgBoK,GACpB,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAPhB,SAaKsH,EACG,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAIRlE,EAAMC,KAAI,SAAAO,GACN,OAAQ,eAAC,GAAD,eAA4BA,GAAbA,EAAK2I,UAKtC/H,IAAgBoK,GACd,oBAAG1C,MAAO,CAAE+C,UAAW,SAAUC,UAAW,QAA5C,SACI,uECYTK,GAzFE,WAAO,IAAD,EAEyCjF,aAAY,SAAAC,GAAK,OAAIA,EAAMG,QAA/EtH,EAFW,EAEXA,MAAOoM,EAFI,EAEJA,SAAUzB,EAFN,EAEMA,kBAAmBvJ,EAFzB,EAEyBA,YAEtCL,EAAW+C,cAEX8G,EAAWC,cAEXP,EAAUC,cAEWK,EAASE,SAAS3C,MAAM,KAAK,IAEpDvI,aAAayE,QAAQ,SAAUuG,EAASE,SAAS3C,MAAM,KAAK,IAGhE,IAAMxG,EAAS/B,aAAaC,QAAQ,WAAa,GAEjDiI,qBAAU,WAEe,IAAjB9H,EAAMkJ,QAA2B,KAAXvH,GACtBZ,EAASW,GAAoBC,MAGlC,CAACZ,EAAUf,EAAO2B,IAErBmG,qBAAU,WAEF1G,GAAegL,GAAY,GAC3BrL,EAASW,GAAoBC,EAAQyK,MAE1C,CAACrL,EAAUqL,EAAUzK,EAAQP,IAEhC0G,qBAAU,WAEN/G,EAASqB,QAEV,CAACrB,IAEC4J,IACDL,EAAQG,KAAK,gBACbxI,IAAKC,KAAK,QAAS,+BAAgC,UAIvD,IAAMsJ,EAA2B,IAAjBxL,EAAMkJ,OAEtB,OACI,sBAAKhF,UAAU,YAAf,SACI,uBAAKA,UAAU,gBAAf,UACI,qBAAIA,UAAU,SAAd,0CAGA,oBAAGA,UAAU,YAAb,2DACA,eAAC,KAAD,CACIuH,WAAYzL,EAAMkJ,OAClBwC,KAAM,kBAAM3K,Ef6KU,CACtCN,KAAMX,EACNY,Qe/KqD0L,Ef+KrC,Ke9KAT,SAAS,EACTC,OAAQxK,IAAgBoK,GACpB,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAPhB,SAaKsH,EACG,sBAAKtH,UAAU,gCAAf,SACI,sBAAKA,UAAU,sBAAsBgH,KAAK,SAA1C,SACI,uBAAMhH,UAAU,UAAhB,4BAIRlE,EAAMC,KAAI,SAAAO,GACN,OAAQ,eAAC,GAAD,eAA4BA,GAAbA,EAAK2I,UAKtC/H,IAAgBoK,GACd,oBAAG1C,MAAO,CAAE+C,UAAW,SAAUC,UAAW,QAA5C,SACI,uEChFTO,I,MARA,WACX,OACI,sBAAKnI,UAAU,SAAf,SACI,kFC6EGoI,GA1EA,WAAO,IAAD,EAEcpF,aAAY,SAAAC,GAAK,OAAIA,EAAMkC,QAAlD1F,EAFS,EAETA,KAAMc,EAFG,EAEHA,QAASD,EAFN,EAEMA,IAEjBzD,EAAW+C,cACXwG,EAAUC,cAEVK,EAAWC,cAPA,EAQEoB,KAAYC,MAAMtB,EAAS7I,QAAtCiK,EARS,EAUuB7I,GAAQ,CAC5CoJ,gBAXa,MAQL,GARK,wBAUVtI,EAVU,KAUER,EAVF,KAcT8I,EAAetI,EAAfsI,WAaR,OACI,uBAAKrI,UAAU,8CAAf,UAEI,eAAC,IAAD,CAAMA,UAAU,eAAec,GAAG,eAAewF,QAAS,kBAAMzJ,EAASqB,OAAzE,wBACA,yBAAQ8B,UAAU,iBAAiBzD,KAAK,SAAS+L,cAAY,WAAWC,cAAY,qBAAqBC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,oBAA5K,SACI,uBAAM1I,UAAU,0BAEpB,uBAAKA,UAAU,4BAA4BiF,GAAG,oBAA9C,UACI,qBAAIjF,UAAU,gBAEd,sBAAKA,UAAU,WACf,wBAAMA,UAAU,mBAAmBC,SApB1B,SAACjE,GAClBA,EAAEkE,iBACFkG,EAAQG,KAAR,+BAAqC8B,KAkB7B,UACI,wBACIrI,UAAU,uBACVzD,KAAK,OACLmE,YAAY,gBACZ4E,aAAa,MACb7F,KAAK,aACLC,MAAO2I,EACP1H,SAAUpB,IAEd,yBAAQS,UAAU,uCAAuCzD,KAAK,SAA9D,uBAIJ,qBAAIyD,UAAU,kBAAd,SACI,sBAAIA,UAAU,2BAAd,UACI,wBAAMA,UAAU,2BAA2B2I,KAAK,IAAI1D,GAAG,yBAAyB+B,KAAK,SAASsB,cAAY,WAAWM,gBAAc,OAAOH,gBAAc,QAAxJ,UACKhJ,EADL,IACYc,KAEZ,uBAAKP,UAAU,gBAAgB6I,kBAAgB,yBAA/C,UACI,eAAC,IAAD,CAAM7I,UAAU,gBAAgBc,GAAE,6BAAwBR,GAA1D,uBACA,sBAAKN,UAAU,qBACf,wBAAMA,UAAU,gCAAgCsG,QArCnD,WACjBzJ,EAAS8B,OAoCW,UACI,oBAAGqB,UAAU,wBACb,6DC3CjB8I,GAnBI,WACf,OACI,uCACI,eAAC,GAAD,IACA,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAO3H,OAAK,EAACC,KAAK,eAAeC,UAAW8F,KAC5C,eAAC,IAAD,CAAOhG,OAAK,EAACC,KAAK,uBAAuBC,UAAWmF,KACpD,eAAC,IAAD,CAAOrF,OAAK,EAACC,KAAK,yBAAyBC,UAAW4G,KACtD,eAAC,IAAD,CAAO9G,OAAK,EAACC,KAAK,qBAAqBC,UAAWwG,KAElD,eAAC,IAAD,CAAU/G,GAAG,oBAGjB,eAAC,GAAD,Q,SClBCiI,GAAgB,SAAC,GAIvB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFF5H,UACG6H,EACD,gDAEF,OACI,+BACI,eAAC,IAAD,2BAAWA,GAAX,IACI7H,UAAW,SAAC8H,GAAD,OACNH,EACM,eAACC,EAAD,eAAeE,IACf,eAAC,IAAD,CAAUrI,GAAG,kCCV3BsI,GAAe,SAAC,GAItB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFF5H,UACG6H,EACD,gDAEF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACI7H,UAAY,SAAC8H,GAAD,OACNH,EACM,eAAC,IAAD,CAAUlI,GAAG,iBACb,eAACmI,EAAD,eAAgBE,SCgCzBE,GApCG,WAEd,IAAMxM,EAAW+C,cAFG,EAGMoD,aAAY,SAAAC,GAAK,OAAIA,EAAMkC,QAA7CmE,EAHY,EAGZA,SAAUhJ,EAHE,EAGFA,IAMlB,OAJAsD,qBAAU,WACN/G,EpB6BJ,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,yDAGuBpB,aAAaC,QAAQ,SAH5C,uBAMCkB,EAASiC,MANV,0CAUgBtD,EAAc,cAV9B,cAUGuB,EAVH,gBAWgBA,EAAKC,OAXrB,QAWG3B,EAXH,QAaM4B,IACLvB,aAAayE,QAAQ,QAAS9E,EAAKI,OACnCC,aAAayE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDxD,EAASkC,GAAM,CACXuB,IAAKjF,EAAKiF,IACVb,KAAMpE,EAAKoE,KACXc,QAASlF,EAAKkF,YAGlB1D,EAASiC,MAvBV,4CAAP,yDoB5BG,CAACjC,IAEAyM,EACQ,4CAIR,eAAC,IAAD,UACI,gBAAC,IAAD,WACI,eAAC,GAAD,CACIlI,KAAK,mBACLC,UAAWH,GACX8H,kBAAmB1I,IAGvB,eAAC,GAAD,CACIc,KAAK,eACLC,UAAWyH,GACXE,kBAAmB1I,IAGvB,eAAC,IAAD,CAAUQ,GAAG,sB,kBCtCvB5B,GAAe,CACjBoK,UAAU,G,SCDRpK,GAAe,CACjBpD,MAAO,GACPsL,SAAU,EACVc,SAAU,EACV/E,WAAY,KACZ5E,cAAe,KACfgL,WAAW,EACX9C,mBAAmB,EACnBY,SAAS,EACTxJ,QAAQ,EACRX,aAAa,GCXXgC,GAAe,CACjB6D,WAAW,EACXoD,iBAAiB,EACjBP,kBAAkB,GCAT4D,GAAcC,aAAgB,CACvCtE,KHCuB,WAAmC,IAAlClC,EAAiC,uDAAzB/D,GAAcwK,EAAW,uCACzD,OAAQA,EAAOnN,MACX,KAAKX,EACD,OAAO,uCACAqH,GACAyG,EAAOlN,SAFd,IAGI8M,UAAU,IAGlB,KAAK1N,EACD,OAAO,2BACAqH,GADP,IAEIqG,UAAU,IAGlB,KAAK1N,EACD,MAAO,CACH0N,UAAU,GAGlB,QACI,OAAOrG,IGrBfG,KFSuB,WAAmC,IAAlCH,EAAiC,uDAAzB/D,GAAcwK,EAAW,uCAGzD,OAAQA,EAAOnN,MACX,KAAKX,EACD,OAAO,2BACAqH,GADP,IAEInH,MAAM,CACF4N,EAAOlN,SADN,oBAEEyG,EAAMnH,QAEbuL,SAAS,IAGjB,KAAKzL,EACD,OAAO,2BACAqH,GADP,IAEInH,MAAO4N,EAAOlN,QACd+M,WAAW,EACX9C,mBAAmB,EACnB5I,QAAQ,IAGhB,KAAKjC,EACD,IAAM+N,EAAeD,EAAOlN,QACpBV,EAAUmH,EAAVnH,MAER,OAAO,2BACAmH,GADP,IAEInH,MAAM,GAAD,oBAAMA,GAAN,aAAgB6N,IACrBJ,WAAW,EACX9C,mBAAmB,EACnB5I,QAAQ,IAGhB,KAAKjC,EACD,OAAO,2BACAqH,GADP,IAEIsG,WAAW,IAGnB,KAAK3N,EACD,OAAO,2BACAqH,GADP,IAEIwD,mBAAmB,IAG3B,KAAK7K,EACD,OAAO,2BACAqH,GADP,IAEIpF,QAAQ,IAGhB,KAAKjC,EACD,OAAO,2BACAqH,GADP,IAEInH,MAAO,GACPsL,SAAU,EACVjE,WAAY,KACZoG,WAAW,EACXrB,SAAU,IAGlB,KAAKtM,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAYuG,EAAOlN,QACnB+M,WAAW,IAGnB,KAAK3N,EACD,OAAO,2BACAqH,GADP,IAEImE,SAAUsC,EAAOlN,UAGzB,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEIiF,SAAUwB,EAAOlN,UAGzB,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEIoE,SAAS,IAGjB,KAAKzL,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAYuG,EAAOlN,UAG3B,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAY,OAGpB,KAAKvH,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAYuG,EAAOlN,UAG3B,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEI1E,cAAemL,EAAOlN,UAG9B,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEI1E,cAAe,OAGvB,KAAK3C,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAYuG,EAAOlN,UAG3B,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEIE,WAAYuG,EAAOlN,QACnB+B,cAAe,OAGvB,KAAK3C,EACD,OAAO,2BACAqH,GADP,IAEI/F,YAAawM,EAAOlN,UAG5B,KAAKZ,EACD,OAAO,2BACAqH,GADP,IAEInH,MAAO,GACPsL,SAAU,EACVc,SAAU,EACV/E,WAAY,KACZ5E,cAAe,KACfgL,WAAW,EACX9C,mBAAmB,EACnBY,SAAS,EACTxJ,QAAQ,EACRX,aAAa,IAIrB,QACI,OAAO+F,IElKfC,GDAqB,WAAmC,IAAlCD,EAAiC,uDAAzB/D,GAAcwK,EAAW,uCACvD,OAAQA,EAAOnN,MACX,KAAKX,EACD,OAAO,2BACAqH,GADP,IAEIF,WAAW,IAGnB,KAAKnH,EACD,OAAO,2BACAqH,GADP,IAEIF,WAAW,IAGnB,KAAKnH,EACD,OAAO,2BACAqH,GADP,IAEIkD,iBAAiB,IAGzB,KAAKvK,EACD,OAAO,2BACAqH,GADP,IAEIkD,iBAAiB,IAGzB,KAAKvK,EACD,OAAO,2BACAqH,GADP,IAEI2C,kBAAkB,IAG1B,KAAKhK,EACD,OAAO,2BACAqH,GADP,IAEI2C,kBAAkB,IAG1B,QACI,OAAO3C,ME1Cb2G,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAG9FC,GAAQC,aACjBT,GACAI,GACIM,aAAgBC,QCETC,GARC,WACd,OACE,eAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,eAAC,GAAD,OCJNK,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c903055.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n\r\n    authChecking: \"[auth] Checking login state\",\r\n    authCheckingFinish: \"[auth] Finish Checking login state\",\r\n    authStartLogin: \"[auth] Start login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start register\",\r\n    authStartTokenRenew: \"[auth] Start token renew\",\r\n    authLogout: \"[auth] Logout\",\r\n\r\n    uiOpenModal: \"[ui] open modal\",\r\n    uiCloseModal: \"[ui] close modal\",\r\n    pageMoreOne: \"[page] one more page\",\r\n    pageUserMoreOne: \"[page] one more user page\",\r\n    newPost: \"[post] new post\",\r\n    uiOpenDeleteModal: \"[ui] open delete modal\",\r\n    uiCloseDeleteModal: \"[ui] close delete modal\",\r\n    uiOpenCommentModal: \"[ui] open comment modal\",\r\n    uiCloseCommentModal: \"[ui] close comment modal\",\r\n    searchFailedLoaded: \"[search] searcg failed\",\r\n    hasNextPage: \"[post] has next page\",\r\n\r\n    postAddNew: \"[Post] Add new\",\r\n    postUpdated: \"[Post] post updated\",\r\n    postDeleted: \"[Post] post deleted\",\r\n    postDeletedStore: \"[Post] post store deleted\",\r\n    postLoaded: \"[Post] Add loaded\",\r\n    postLoadedMore: \"[Post] Add more loaded\",\r\n    postLoadedOne: \"[Post] Add one loaded\",\r\n    postFailedLoaded: \"[Post] Failed loaded\",\r\n    postDetailFailed: \"[Post] Failed detail loaded\",\r\n    blogLogoutCleaning: \"[Blog] clean blog logout\",\r\n\r\n    commentAddNew: \"[Comment] Add new\",\r\n    activeComment: \"[Comment] active comment\",\r\n    desactiveComment: \"[Comment] desactive comment\",\r\n    commentUpdated: \"[Comment] comment updated\",\r\n    commentDeleted: \"[Comment] comment deleted\",\r\n}","import moment from \"moment\"\r\n\r\nexport const preparePosts = (posts = []) => {\r\n\r\n    return posts.map((e) => ({\r\n        ...e,\r\n        created_at: moment(e.created_at).toDate(),\r\n        updated_at: moment(e.updated_at).toDate()\r\n    }))\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { preparePosts } from \"../helpers/preparePosts\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const postStartAddNew = (post) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name, surname } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(\"posts\", post, \"POST\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                post.id = body.post.id;\r\n                post.user = {\r\n                    _id: uid,\r\n                    name: name,\r\n                    surname: surname\r\n                }\r\n\r\n                dispatch(postAddNew(post))\r\n\r\n                Swal.fire(\"Se ha creado: \", post.title, \"success\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst postAddNew = (post) => ({\r\n    type: types.postAddNew,\r\n    payload: post\r\n})\r\n\r\nexport const postStartUpdate = (post) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`posts/${post.id}`, post, \"PUT\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(postUpdated(post))\r\n\r\n                Swal.fire(\"Se ha actualizado correctamente: \", post.title, \"info\");\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst postUpdated = (post) => ({\r\n    type: types.postUpdated,\r\n    payload: post\r\n})\r\n\r\nexport const postStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id, title } = getState().blog.activePost\r\n\r\n        try {\r\n            const resp = await fetchConToken(`posts/${id}`, {}, \"DELETE\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(postDeleted())\r\n                Swal.fire(\"Se ha eliminado correctamente\", title, \"warning\")\r\n\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst postDeleted = () => ({\r\n    type: types.postDeletedStore\r\n})\r\n\r\nexport const uinewPost = () => ({\r\n    type: types.newPost\r\n})\r\n\r\n\r\nexport const postMoreLoading = (page = 0) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (page === 0) {\r\n                const resp = await fetchSinToken(`posts`);\r\n                const body = await resp.json();\r\n\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts);\r\n                    dispatch(hasNextPage(body.hasNextPage))\r\n                    dispatch(postLoaded(posts))\r\n                } else {\r\n                    dispatch(postFailedLoaded())\r\n                }\r\n            } else {\r\n                const resp = await fetchSinToken(`posts/${page}`);\r\n                const body = await resp.json();\r\n\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts);\r\n                    dispatch(hasNextPage(body.hasNextPage))\r\n                    dispatch(postLoadedMore(posts))\r\n                } else {\r\n                    dispatch(postFailedLoaded())\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const postUserMoreLoading = (userId, page = 0) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (page === 0) {\r\n                const resp = await fetchSinToken(`posts/user-posts/${userId}`);\r\n                const body = await resp.json();\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts.docs);\r\n                    dispatch(hasNextPage(body.posts.hasNextPage))\r\n                    dispatch(postLoaded(posts))\r\n                } else {\r\n                    dispatch(postFailedLoaded())\r\n                    dispatch(postDetailFailed())\r\n\r\n                }\r\n            } else {\r\n                const resp = await fetchSinToken(`posts/user-posts/${userId}/${page}`);\r\n                const body = await resp.json();\r\n\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts.docs);\r\n                    dispatch(hasNextPage(body.posts.hasNextPage))\r\n                    dispatch(postLoadedMore(posts))\r\n                } else {\r\n                    dispatch(postFailedLoaded())\r\n\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const postMoreLoadingSearch = (search, page = 0) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (page === 0) {\r\n                const resp = await fetchSinToken(`posts/search/${search}`);\r\n                const body = await resp.json();\r\n\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts.docs);\r\n                    dispatch(hasNextPage(body.posts.hasNextPage))\r\n                    dispatch(postLoaded(posts))\r\n\r\n                } else {\r\n                    dispatch(searchFailedLoaded())\r\n                    Swal.fire(\"No hay posts encontrados por:\", search, \"error\")\r\n                }\r\n            } else {\r\n                const resp = await fetchSinToken(`posts//search/${search}/${page}`);\r\n                const body = await resp.json();\r\n\r\n                if (body.ok) {\r\n                    const posts = preparePosts(body.posts.docs);\r\n                    dispatch(hasNextPage(body.posts.hasNextPage))\r\n                    dispatch(postLoadedMore(posts))\r\n                } else {\r\n                    dispatch(postFailedLoaded())\r\n                }\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const postDetailFailed = () => ({\r\n    type: types.postDetailFailed\r\n})\r\n\r\n\r\nconst hasNextPage = (nextPage) => ({\r\n    type: types.hasNextPage,\r\n    payload: nextPage\r\n})\r\n\r\nconst postLoaded = (posts) => ({\r\n    type: types.postLoaded,\r\n    payload: posts\r\n})\r\n\r\nconst searchFailedLoaded = () => ({\r\n    type: types.searchFailedLoaded\r\n})\r\n\r\nexport const postDeleteStore = () => ({\r\n    type: types.postDeletedStore,\r\n})\r\n\r\nconst postLoadedMore = (posts) => ({\r\n    type: types.postLoadedMore,\r\n    payload: posts\r\n})\r\n\r\nconst postFailedLoaded = () => ({\r\n    type: types.postFailedLoaded,\r\n})\r\n\r\nexport const pageMoreOne = (page) => ({\r\n    type: types.pageMoreOne,\r\n    payload: page + 1\r\n})\r\n\r\nexport const pageUserMoreOne = (page) => ({\r\n    type: types.pageUserMoreOne,\r\n    payload: page + 1\r\n})\r\n\r\nexport const postLoadingOne = (postId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchSinToken(`posts/detail/${postId}`);\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(postLoadOne(body.post))\r\n            } else {\r\n                dispatch(postFailedLoaded())\r\n                dispatch(postDetailFailed())\r\n                Swal.fire(\"Error\", \"No existe el post buscado\", \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst postLoadOne = (post) => ({\r\n    type: types.postLoadedOne,\r\n    payload: post\r\n})\r\n\r\n\r\nexport const commentStartNew = (comments, postId) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name, surname } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`comments/${postId}`, comments, \"POST\");\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                comments.user = {\r\n                    _id: uid,\r\n                    name: name,\r\n                    surname: surname\r\n                }\r\n\r\n                dispatch(commentAddNew(body.post))\r\n\r\n                Swal.fire(\"Se ha creado el comentario exitosamente\", \"\", \"success\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst commentAddNew = (comments) => ({\r\n    type: types.commentAddNew,\r\n    payload: comments\r\n})\r\n\r\nexport const activeComment = (comment) => ({\r\n    type: types.activeComment,\r\n    payload: comment\r\n})\r\n\r\nexport const desactiveComment = () => ({\r\n    type: types.desactiveComment,\r\n})\r\n\r\nexport const commentStartUpdate = (comment, commentId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`comments/${commentId}`, comment, \"PUT\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(commentUpdated(body.postUpdate))\r\n\r\n                Swal.fire(\"Se ha actualizado correctamente el comentario\", \"\", \"info\");\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst commentUpdated = (comment) => ({\r\n    type: types.commentUpdated,\r\n    payload: comment\r\n})\r\n\r\nexport const commentStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().blog.activePost\r\n        const { _id } = getState().blog.activeComment\r\n\r\n        try {\r\n            const resp = await fetchConToken(`comments/${id}/${_id}`, {}, \"DELETE\");\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(commentDeleted(body.post))\r\n                Swal.fire(\"El comentario se ha eliminado correctamente\", \"\", \"warning\")\r\n\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst commentDeleted = (comment) => ({\r\n    type: types.commentDeleted,\r\n    payload: comment\r\n})\r\n\r\nexport const blogLogout = () => ({\r\n    type: types.blogLogoutCleaning\r\n})","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { blogLogout } from \"./post\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                surname: body.surname\r\n            }))\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name, surname) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken(\"auth/register\", { email, password, name, surname }, \"POST\");\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                surname: body.surname\r\n            }))\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const isCurrentToken = !!(localStorage.getItem('token') || '');\r\n\r\n        if (!isCurrentToken) {\r\n            dispatch(checkingFinish());\r\n            return;\r\n        }\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                surname: body.surname\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n        dispatch(blogLogout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from \"react-redux\"\r\nimport './auth.css';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(email, password))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-body-div\">\r\n            <div className=\"login-div\">\r\n                <div className=\"logo\"></div>\r\n                <div className=\"titulo\">Ingreso</div>\r\n                <div className=\"subtitulo\">Incia sesion para entrar al blog</div>\r\n\r\n                <div className=\"campos\">\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"usuario\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"input-usuario input-login\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                pattern=\"[a-z0-9._%+-]+@[a-z09.-]+\\.[a-z]{2,4}$\"\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"contraseña\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"input-pass input-login\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"boton\"\r\n                            value=\"Login\"\r\n                        />\r\n                    </form>\r\n\r\n\r\n                    <div className=\"link\">\r\n                        <Link to=\"/react-blog/auth/register\">Registrar</Link>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './auth.css';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: \"\",\r\n        surname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n\r\n    const { name, surname, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== password2) {\r\n            return Swal.fire(\"Error\", \"Las contraseñas deben de ser iguales\", \"error\");\r\n        }\r\n\r\n        dispatch(startRegister(email, password, name, surname))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-body-div\">\r\n            <div className=\"register-div\">\r\n                <div className=\"logo\"></div>\r\n                <div className=\"titulo\">Registro</div>\r\n                <div className=\"subtitulo\">Registrate para entrar al blog</div>\r\n\r\n                <div className=\"campos\">\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"usuario\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"input-usuario input-login\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={handleInputChange}\r\n                                pattern=\"[a-zA-Z]+\"\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"usuario\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"input-usuario input-login\"\r\n                                placeholder=\"Apellidos\"\r\n                                name=\"surname\"\r\n                                value={surname}\r\n                                onChange={handleInputChange}\r\n                                pattern=\"[a-zA-Z]+\"\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"usuario\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"input-usuario input-login\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                                pattern=\"[a-z0-9._%+-]+@[a-z09.-]+\\.[a-z]{2,4}$\"\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"contraseña\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"input-pass input-login\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"contraseña\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"input-pass input-login\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"password2\"\r\n                                value={password2}\r\n                                onChange={handleInputChange}\r\n                                required\r\n\r\n                            />\r\n                        </div>\r\n\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"boton\"\r\n                            value=\"Registrarse\"\r\n                        />\r\n                    </form>\r\n\r\n\r\n                    <div className=\"link\">\r\n                        <Link to=\"/react-blog/auth/login\">Logueate</Link>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport LoginScreen from \"../components/auth/LoginScreen\"\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\"\r\n\r\nconst AuthRoutes = () => {\r\n    return (\r\n\r\n        <Switch >\r\n            <Route exact path=\"/react-blog/auth/login\" component={LoginScreen} />\r\n            <Route exact path=\"/react-blog/auth/register\" component={RegisterScreen} />\r\n\r\n            <Redirect to=\"/react-blog/auth/login\" />\r\n\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AuthRoutes\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})\r\n\r\nexport const uiOpenDeleteModal = () => ({\r\n    type: types.uiOpenDeleteModal\r\n})\r\n\r\nexport const uiCloseDeleteModal = () => ({\r\n    type: types.uiCloseDeleteModal\r\n})\r\n\r\n\r\nexport const uiOpenCommentModal = () => ({\r\n    type: types.uiOpenCommentModal\r\n})\r\n\r\nexport const uiCloseCommentModal = () => ({\r\n    type: types.uiCloseCommentModal\r\n})\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/dv1ksnrvk/upload\";\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\", \"react-blog\");\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            Swal.fire(\"Error\", \"Porfavor sube una imagen\", \"error\")\r\n        }\r\n\r\n    } catch (err) {\r\n        Swal.fire(\"Error\", err, \"error\")\r\n    }\r\n}","import Modal from 'react-modal';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postStartAddNew, postStartUpdate } from '../../actions/post';\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from '../../helpers/fileUpload';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst initEvent = {\r\n    title: \"\",\r\n    description: \"\",\r\n    url: \"\"\r\n}\r\n\r\nconst CreatePost = () => {\r\n\r\n    // const { activePost } = useSelector(state => state.blog)\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activePost } = useSelector(state => state.blog)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [titleValid, settitleValid] = useState(true)\r\n    const [descriptionValid, setdescriptionValid] = useState(true)\r\n    const [urlValid, seturlValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    const { title, description, url } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activePost) {\r\n            setFormValues(activePost);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activePost])\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        if (!activePost) {\r\n            setFormValues(initEvent)\r\n        }\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleFileChange = async (e) => {\r\n        const file = e.target.files[0];\r\n        const file_extension = file?.name?.split(\".\").pop();\r\n        if (!file_extension) {\r\n            return null\r\n        }\r\n        if (file_extension === \"png\" || file_extension === \"jpg\" || file_extension === \"jpge\" || file_extension === \"gif\" || file_extension === \"webp\") {\r\n            Swal.fire({\r\n                title: 'Cargando...',\r\n                text: 'Porfavor espere...',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                willOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            });\r\n\r\n            const fileUrl = await fileUpload(file);\r\n            setFormValues({\r\n                ...formValues,\r\n                url: fileUrl\r\n            })\r\n            Swal.close();\r\n        } else {\r\n            Swal.fire(\"Error\", \"Porfavor sube una imagen\", \"error\")\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (title.trim().length < 2) {\r\n            return settitleValid(false)\r\n        }\r\n\r\n        if (description.trim().length < 30) {\r\n            return setdescriptionValid(false)\r\n        }\r\n\r\n        if (url.trim().length < 5) {\r\n            return seturlValid(false)\r\n        }\r\n\r\n        if (activePost) {\r\n            dispatch(postStartUpdate(formValues))\r\n        } else {\r\n            dispatch(postStartAddNew(formValues))\r\n        }\r\n        closeModal();\r\n        settitleValid(true);\r\n        setdescriptionValid(true);\r\n        seturlValid(true)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1 className=\"mt-4\">{(activePost) ? \"Editar post\" : \"Nuevo post\"}</h1>\r\n                <hr />\r\n                <form onSubmit={handleSubmitForm} className=\"container\">\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n                            placeholder=\"Título del post\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            autoComplete=\"off\"\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        {!titleValid &&\r\n                            <small id=\"emailHelp\" className=\"form-text text-danger\">El titulo debe ser mas largo</small>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Descripcion</label>\r\n                        <textarea\r\n                            className={`form-control textarea ${!descriptionValid && \"is-invalid\"}`}\r\n                            placeholder=\"Descripcion del evento\"\r\n                            name=\"description\"\r\n                            value={description}\r\n                            rows=\"9\"\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        {!descriptionValid &&\r\n                            <small id=\"emailHelp\" className=\"form-text text-danger\">La descripcion debe ser mas largo</small>\r\n\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"div_file form-group\">\r\n                        <p id=\"texto\">Subir imagen</p>\r\n\r\n                        <input\r\n                            id=\"fileSelector\"\r\n                            type=\"file\"\r\n                            className=\"file_btn form-control\"\r\n                            name=\"url\"\r\n                            onChange={handleFileChange}\r\n                            accept=\"image/*\"\r\n                        />\r\n                        {!urlValid &&\r\n                            <small id=\"emailHelp\" className=\"form-text text-danger\">La imagen es obligatoria</small>\r\n                        }\r\n                    </div>\r\n                    {url.length > 0 &&\r\n                        <>\r\n                            < img src={url} alt={title} className=\"img-new-post\" />\r\n                            <br />\r\n                        </>\r\n                    }\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success mt-3\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span className=\"ml-2\">Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","import { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { commentStartNew, commentStartUpdate, desactiveComment } from '../../actions/post';\r\nimport { uiCloseCommentModal } from '../../actions/ui';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst initEvent = {\r\n    content: \"\"\r\n}\r\n\r\n\r\nconst ModalComment = () => {\r\n\r\n    const { modalCommentOpen } = useSelector(state => state.ui)\r\n    const { activePost, activeComment } = useSelector(state => state.blog)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [contentValid, setContentValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    const { content } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeComment) {\r\n            setFormValues(activeComment);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeComment])\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseCommentModal())\r\n        setFormValues(initEvent)\r\n        if (activeComment) {\r\n            dispatch(desactiveComment())\r\n        }\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (content.trim().length < 2) {\r\n            return setContentValid(false)\r\n        }\r\n\r\n        if (activeComment) {\r\n            dispatch(commentStartUpdate(formValues, activeComment?._id))\r\n        } else {\r\n        dispatch(commentStartNew(formValues, activePost.id))\r\n        }\r\n        closeModal();\r\n        setContentValid(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalCommentOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1 className=\"mt-4\">{(activeComment) ? \"Editar comentario\" : \"Nuevo comentario\"}</h1>\r\n            <hr />\r\n            <form onSubmit={handleSubmitForm} className=\"container\">\r\n                <div className=\"form-group\">\r\n                    <label>Contenido</label>\r\n                    <textarea\r\n                        className={`form-control textarea  ${!contentValid && \"is-invalid\"}`}\r\n                        placeholder=\"Contenido del comentario\"\r\n                        name=\"content\"\r\n                        value={content}\r\n                        rows=\"20\"\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                    {!contentValid &&\r\n                        <small id=\"emailHelp\" className=\"form-text text-danger\">EL contenido debe ser mas largo</small>\r\n                    }\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-success mt-3\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span className=\"ml-2\">Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalComment\r\n","import Modal from \"react-modal\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport { commentStartDelete, postStartDelete } from \"../../actions/post\"\r\nimport { uiCloseDeleteModal } from \"../../actions/ui\";\r\nimport \"./blog.css\"\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        transform: 'translate(-2%, -160%)',\r\n    },\r\n};\r\n\r\n\r\nconst ModalPostDelete = () => {\r\n\r\n    const { modalDeleteOpen } = useSelector(state => state.ui)\r\n    const { activeComment } = useSelector(state => state.blog)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseDeleteModal())\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (activeComment) {\r\n            dispatch(commentStartDelete())\r\n        } else {\r\n            dispatch(postStartDelete())\r\n            history.push(\"/react-blog/\");\r\n        }\r\n        dispatch(uiCloseDeleteModal())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalDeleteOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal-delete\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h2 className=\"mb-3\">{activeComment ? \"¿Estás Seguro que deseas eliminar este comentario?\" : \"¿Estás Seguro que deseas eliminar este post?\"}</h2>\r\n\r\n            <button className=\"btn btn-danger mr-4\" onClick={handleDelete}>\r\n                Sí\r\n            </button>\r\n            <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={closeModal}\r\n            >\r\n                No\r\n            </button>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalPostDelete\r\n","import moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { activeComment, postDeleteStore, postLoadingOne } from \"../../actions/post\";\r\nimport { uiOpenCommentModal, uiOpenDeleteModal, uiOpenModal } from \"../../actions/ui\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport ModalComment from \"./ModalComment\";\r\nimport ModalPostDelete from \"./ModalPostDelete\";\r\n\r\nconst BlogDetail = () => {\r\n\r\n\r\n    const { uid } = useSelector(state => state.auth)\r\n    const { activePost, activePostloading } = useSelector(state => state.blog)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const location = useLocation()\r\n\r\n    const localStoragePostId = location.pathname.split(\"/\")[2]\r\n    if (localStoragePostId) {\r\n        localStorage.setItem(\"postId\", location.pathname.split(\"/\")[2])\r\n    }\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(postDeleteStore)\r\n    }, [dispatch])\r\n\r\n    const postId = localStorage.getItem(\"postId\") || \"\"\r\n\r\n    useEffect(() => {\r\n        if (activePost === null) {\r\n            if (postId !== \"\") {\r\n                dispatch(postLoadingOne(postId))\r\n            }\r\n        }\r\n    }, [dispatch, postId, activePost])\r\n\r\n\r\n    if (!activePostloading) {\r\n        history.push(\"/react-blog/\");\r\n    }\r\n\r\n    const postDate = moment(activePost?.created_at);\r\n\r\n    const openEditModal = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(uiOpenDeleteModal())\r\n    }\r\n\r\n    const handleComment = () => {\r\n        dispatch(uiOpenCommentModal())\r\n    }\r\n\r\n    const handleUser = () => {\r\n        history.push(`/react-blog/perfil/${activePost.user._id}`)\r\n    }\r\n\r\n    // const handleOpenModalComment = () => {\r\n    //     dispatch(activeComment())\r\n    //     dispatch(uiOpenCommentModal())\r\n    // }\r\n\r\n    const comments = activePost?.comments\r\n\r\n    const commentDate = moment(comments?.created_at);\r\n\r\n\r\n    return (\r\n        <div >\r\n            {activePost === null ? <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border m-5\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n                : <div className=\"container overflow-hidden\">\r\n                    <div className=\"animate__animated animate__backInDown\">\r\n                        <h2 className=\"mt-3\">{activePost?.title}</h2>\r\n                        <hr />\r\n                        <div className=\"row align-items-start r-responsive\">\r\n                            <p className=\"p-post-one col\">\r\n                                <span className=\"badge badge-primary\">{activePost?.user?.name} {activePost?.user?.surname}</span>\r\n                                <span className=\"badge badge-light ml-2 date\">{postDate.format(\"Do MMMM YYYY\")}</span>\r\n                            </p>\r\n                                <button className=\"btn btn-sm btn-success mr-3 mt-1 col-2 buton-left-margin\" onClick={handleUser}>Ver perfil</button>\r\n                                {activePost?.user?._id === uid &&\r\n                                    <>\r\n                                        <button className=\"btn btn-sm btn-warning mr-3 mt-1 col-2\" onClick={openEditModal}><i className=\"fas fa-edit\"></i> Editar</button>\r\n                                        <button className=\"btn btn-sm btn-danger mr-3 mt-1 col-2\" onClick={handleDelete}><i className=\"fas fa-trash\"></i> Eliminar</button>\r\n                                    </>\r\n                                }\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    <img className=\"img-post animate__animated animate__backInRight\" src={activePost?.url} alt={activePost?.title} />\r\n                    <p className=\"description lead animate__animated animate__backInLeft\">{activePost?.description}</p>\r\n                    <div className=\"clearfix\"></div>\r\n                </div>\r\n            }\r\n            <CreatePost />\r\n            <ModalPostDelete />\r\n            <div className=\"container\">\r\n\r\n                {activePost &&\r\n                    <div className=\"animate__animated animate__backInUp\">\r\n                        <hr />\r\n                        <h2>Comentarios</h2>\r\n                        <button className=\"btn btn-outline-primary mt-2\" onClick={handleComment}>Comentar</button>\r\n                    </div>\r\n                }\r\n\r\n                {comments?.length === 0 && activePost ? <h5 className=\"mt-3 mb-4 animate__animated animate__backInUp\">No hay comentario en este post, prueba comentar uno</h5> :\r\n                    comments?.map(comment => {\r\n                        return (\r\n                            <ul className=\"list-group list-comments mt-4 animate__animated animate__fadeIn animate__delay-1s\" key={comment._id}>\r\n\r\n                                <li className=\"list-group-item comment-item overflow-hidden\" >\r\n                                    <span className=\"badge badge-primary\">\r\n                                        {comment?.user?.name + ' ' + comment?.user?.surname}\r\n                                    </span>\r\n                                    <span className=\"badge badge-light ml-2\">\r\n                                        {commentDate.format(\"Do MMMM YYYY\")}\r\n                                    </span>\r\n                                    <span className=\"d-block\">\r\n                                        {comment?.content}\r\n                                    </span>\r\n                                    {comment?.user?._id === uid &&\r\n                                        <>\r\n                                            <button className=\"btn btn-sm btn-danger float-right\" onClick={() => (dispatch(activeComment(comment), dispatch(uiOpenDeleteModal())))}>Borrar</button>\r\n                                            <button className=\"btn btn-sm btn-warning mr-2 float-right\" onClick={() => (dispatch(activeComment(comment), dispatch(uiOpenCommentModal())))}>Editar</button>\r\n                                        </>\r\n                                    }\r\n                                </li>\r\n                            </ul>\r\n                        )\r\n                    })}\r\n            </div >\r\n            <ModalComment />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BlogDetail\r\n","import moment from \"moment\"\r\nimport 'moment/locale/es';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst BlogCard = ({\r\n    id,\r\n    title,\r\n    description,\r\n    created_at,\r\n    user\r\n}) => {\r\n\r\n    const postDate = moment(created_at);\r\n\r\n    return (\r\n        <div className=\"posts-box animate__animated animate__fadeInUp\">\r\n            <h2 >{title}</h2>\r\n            <p className=\"post-user-date\">{user.name} {user.surname} - {postDate.format(\"Do MMMM YYYY\")}</p>\r\n            <p className=\"post-description\">{description}</p>\r\n            <Link to={`/react-blog/post/${id}`} className=\"post-link btn\" >Leer más</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogCard\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { pageMoreOne, postDeleteStore, postMoreLoading, uinewPost } from \"../../actions/post\"\r\nimport \"./blog.css\"\r\nimport BlogCard from \"./BlogCard\"\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CreatePost from \"./CreatePost\"\r\nimport { uiOpenModal } from \"../../actions/ui\"\r\n\r\n\r\nconst BlogScreen = () => {\r\n\r\n    const { posts, postPage, postNew, hasNextPage } = useSelector(state => state.blog);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        if (posts.length === 0) {\r\n            dispatch(postMoreLoading())\r\n        }\r\n\r\n    }, [dispatch, posts]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (postPage >= 2) {\r\n            dispatch(postMoreLoading(postPage))\r\n        }\r\n    }, [dispatch, postPage]);\r\n\r\n    useEffect(() => {\r\n        dispatch(postDeleteStore())\r\n\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (postNew) {\r\n            dispatch(postDeleteStore())\r\n            dispatch(uinewPost())\r\n        }\r\n    }, [dispatch, postNew])\r\n\r\n    const openModal = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const isEmpty = posts.length === 0;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box-container\">\r\n                <h1 className=\"titulo\">\r\n                    Blog-react\r\n                </h1>\r\n                <p className=\"subtitulo\">Mira los post mas recientes o <span className=\"subtitulo newPost\" onClick={openModal}>crea un post</span></p>\r\n                <InfiniteScroll\r\n                    dataLength={posts.length}\r\n                    next={() => dispatch(pageMoreOne(postPage))}\r\n                    hasMore={true}\r\n                    loader={hasNextPage && !isEmpty &&\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                >\r\n\r\n                    {isEmpty ?\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        posts.map(post => {\r\n                            return (<BlogCard key={post.id} {...post} />)\r\n                        })}\r\n\r\n                </InfiniteScroll>\r\n\r\n                {!hasNextPage && !isEmpty &&\r\n                    <p style={{ textAlign: 'center', marginTop: \"10px\" }}>\r\n                        <b>No hay mas posts para mostrar</b>\r\n                    </p>\r\n                }\r\n            </div>\r\n\r\n            <CreatePost />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BlogScreen\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { pageMoreOne, postDeleteStore, postMoreLoadingSearch } from \"../../actions/post\"\r\nimport \"./blog.css\"\r\nimport BlogCard from \"./BlogCard\"\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport queryString from \"query-string\";\r\n\r\nconst BlogSearch = () => {\r\n\r\n    const { posts, hasNextPage, postPage, search } = useSelector(state => state.blog);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { q } = queryString.parse(location.search)\r\n\r\n    useEffect(() => {\r\n\r\n        if (posts.length === 0) {\r\n            dispatch(postMoreLoadingSearch(q))\r\n        }\r\n\r\n    }, [dispatch, posts, q]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (postPage >= 2) {\r\n            dispatch(postMoreLoadingSearch(q, postPage))\r\n        }\r\n    }, [dispatch, postPage, q]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(postDeleteStore())\r\n\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!search) {\r\n            history.push(\"/react-blog/\")\r\n        }\r\n    }, [search, history])\r\n\r\n\r\n\r\n\r\n    const isEmpty = posts.length === 0;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box-container\">\r\n                <h1 className=\"titulo\">\r\n                    Posts encontrados por la busqueda: {q}\r\n                </h1>\r\n                <InfiniteScroll\r\n                    dataLength={posts.length}\r\n                    next={() => dispatch(pageMoreOne(postPage))}\r\n                    hasMore={true}\r\n                    loader={hasNextPage && !isEmpty &&\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                >\r\n\r\n                    {isEmpty ?\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        posts.map(post => {\r\n                            return (<BlogCard key={post.id} {...post} />)\r\n                        })}\r\n\r\n                </InfiniteScroll>\r\n\r\n                {!hasNextPage && !isEmpty &&\r\n                    <p style={{ textAlign: 'center', marginTop: \"10px\" }}>\r\n                        <b>No hay mas posts para mostrar</b>\r\n                    </p>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BlogSearch\r\n","import { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { pageUserMoreOne, postDeleteStore, postUserMoreLoading } from \"../../actions/post\"\r\nimport \"./blog.css\"\r\nimport BlogCard from \"./BlogCard\"\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { useHistory, useLocation } from \"react-router\"\r\nimport Swal from \"sweetalert2\"\r\n\r\nconst BlogUser = () => {\r\n\r\n    const { posts, userPage, activePostloading, hasNextPage } = useSelector(state => state.blog);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n\r\n    const history = useHistory();\r\n\r\n    const localStorageUserId = location.pathname.split(\"/\")[2]\r\n    if (localStorageUserId) {\r\n        localStorage.setItem(\"userId\", location.pathname.split(\"/\")[2])\r\n    }\r\n\r\n    const userId = localStorage.getItem(\"userId\") || \"\"\r\n\r\n    useEffect(() => {\r\n\r\n        if (posts.length === 0 && userId !== \"\") {\r\n            dispatch(postUserMoreLoading(userId))\r\n        }\r\n\r\n    }, [dispatch, posts, userId]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (hasNextPage && userPage >= 2) {\r\n            dispatch(postUserMoreLoading(userId, userPage))\r\n        }\r\n    }, [dispatch, userPage, userId, hasNextPage]);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(postDeleteStore())\r\n\r\n    }, [dispatch])\r\n\r\n    if (!activePostloading) {\r\n        history.push(\"/react-blog/\");\r\n        Swal.fire(\"Error\", \"No existe el usuario buscado\", \"error\");\r\n    }\r\n\r\n\r\n    const isEmpty = posts.length === 0;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"box-container\">\r\n                <h1 className=\"titulo\">\r\n                    Posts creados por el usuario\r\n                </h1>\r\n                <p className=\"subtitulo\">Mira todos los posts creados por este usuario</p>\r\n                <InfiniteScroll\r\n                    dataLength={posts.length}\r\n                    next={() => dispatch(pageUserMoreOne(userPage))}\r\n                    hasMore={true}\r\n                    loader={hasNextPage && !isEmpty &&\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                >\r\n\r\n                    {isEmpty ?\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"spinner-border mt-3\" role=\"status\">\r\n                                <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        posts.map(post => {\r\n                            return (<BlogCard key={post.id} {...post} />)\r\n                        })}\r\n\r\n                </InfiniteScroll>\r\n\r\n                {!hasNextPage && !isEmpty &&\r\n                    <p style={{ textAlign: 'center', marginTop: \"10px\" }}>\r\n                        <b>No hay mas posts para mostrar</b>\r\n                    </p>\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BlogUser","import \"./ui.css\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Pagina creada por Lautaro Perez Herrera &copy;</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport queryString from \"query-string\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { startLogout } from \"../../actions/auth\"\r\nimport { postDeleteStore } from \"../../actions/post\"\r\nimport { useForm } from \"../../hooks/useForm\"\r\nimport { useHistory, useLocation } from \"react-router\"\r\n\r\nconst Navbar = () => {\r\n\r\n    const { name, surname, uid } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    // const herosFiltered = useMemo(() => getHeroesByName(q), [q])\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`/react-blog/buscar?q=${searchText}`)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\r\n            <Link className=\"navbar-brand\" to=\"/react-blog/\" onClick={() => dispatch(postDeleteStore())}>Blog-react</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"collapse navbar-collapse \" id=\"navbarNavDropdown\">\r\n                <ul className=\"navbar-nav \">\r\n                </ul>\r\n                <div className=\"m-auto\"></div>\r\n                <form className=\"form-inline mr-5\" onSubmit={handleSearch}>\r\n                    <input\r\n                        className=\"form-control mr-sm-2\"\r\n                        type=\"text\"\r\n                        placeholder=\"Busca un post\"\r\n                        autoComplete=\"off\"\r\n                        name=\"searchText\"\r\n                        value={searchText}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Buscar</button>\r\n                </form>\r\n\r\n\r\n                <ul className=\"navbar-nav mr-5\">\r\n                    <li className=\"nav-item dropdown active\">\r\n                        <span className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {name} {surname}\r\n                        </span>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                            <Link className=\"dropdown-item\" to={`/react-blog/perfil/${uid}`}>Mis posts</Link>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <span className=\"dropdown-item btn text-danger\" onClick={handleLogout}>\r\n                                <i className=\"fas fa-sign-out-alt\"></i>\r\n                                <span> Salir</span>\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport BlogDetail from \"../components/blog/BlogDetail\"\r\nimport BlogScreen from \"../components/blog/BlogScreen\"\r\nimport BlogSearch from \"../components/blog/BlogSearch\"\r\nimport BlogUser from \"../components/blog/BlogUser\"\r\nimport Footer from \"../components/ui/Footer\"\r\nimport Navbar from \"../components/ui/Navbar\"\r\n\r\nconst BlogRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch >\r\n\r\n                <Route exact path=\"/react-blog/\" component={BlogScreen} />\r\n                <Route exact path=\"/react-blog/post/:id\" component={BlogDetail} />\r\n                <Route exact path=\"/react-blog/perfil/:id\" component={BlogUser} />\r\n                <Route exact path=\"/react-blog/buscar\" component={BlogSearch} />\r\n\r\n                <Redirect to=\"/react-blog/\" />\r\n\r\n            </Switch>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogRoutes\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n                component={(props) => (\r\n                    (isAuthenticated)\r\n                        ? (<Component {...props} />)\r\n                        : (<Redirect to=\"/react-blog/auth/login\" />)\r\n                )}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPrivateRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRouter = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/react-blog/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport AuthRoutes from \"./AuthRoutes\";\r\nimport BlogRoutes from \"./BlogRoutes\";\r\nimport { PrivateRouter } from \"./PrivateRouter\";\r\nimport { PublicRouter } from \"./PublicRouter\";\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRouter\r\n                    path=\"/react-blog/auth\"\r\n                    component={AuthRoutes}\r\n                    isAuthenticated={!!uid}\r\n                />\r\n\r\n                <PrivateRouter\r\n                    path=\"/react-blog/\"\r\n                    component={BlogRoutes}\r\n                    isAuthenticated={!!uid}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n               \r\n            </Switch>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    postPage: 1,\r\n    userPage: 1,\r\n    activePost: null,\r\n    activeComment: null,\r\n    isLoading: false,\r\n    activePostloading: true,\r\n    postNew: false,\r\n    search: true,\r\n    hasNextPage: false\r\n}\r\n\r\nexport const blogReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.postAddNew:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    action.payload,\r\n                    ...state.posts\r\n                ],\r\n                postNew: true\r\n            };\r\n\r\n        case types.postLoaded:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                isLoading: true,\r\n                activePostloading: true,\r\n                search: true\r\n            };\r\n\r\n        case types.postLoadedMore:\r\n            const newPostsList = action.payload;\r\n            const { posts } = state;\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...posts, ...newPostsList],\r\n                isLoading: true,\r\n                activePostloading: true,\r\n                search: true\r\n            };\r\n\r\n        case types.postFailedLoaded:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            };\r\n\r\n        case types.postDetailFailed:\r\n            return {\r\n                ...state,\r\n                activePostloading: false,\r\n            };\r\n\r\n        case types.searchFailedLoaded:\r\n            return {\r\n                ...state,\r\n                search: false\r\n            };\r\n\r\n        case types.postDeletedStore:\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n                postPage: 1,\r\n                activePost: null,\r\n                isLoading: false,\r\n                userPage: 1,\r\n            };\r\n\r\n        case types.postLoadedOne:\r\n            return {\r\n                ...state,\r\n                activePost: action.payload,\r\n                isLoading: true\r\n            };\r\n\r\n        case types.pageMoreOne:\r\n            return {\r\n                ...state,\r\n                postPage: action.payload\r\n            }\r\n\r\n        case types.pageUserMoreOne:\r\n            return {\r\n                ...state,\r\n                userPage: action.payload\r\n            }\r\n\r\n        case types.newPost:\r\n            return {\r\n                ...state,\r\n                postNew: false\r\n            }\r\n\r\n        case types.postUpdated:\r\n            return {\r\n                ...state,\r\n                activePost: action.payload\r\n            }\r\n\r\n        case types.postDeleted:\r\n            return {\r\n                ...state,\r\n                activePost: null\r\n            }\r\n\r\n        case types.commentAddNew:\r\n            return {\r\n                ...state,\r\n                activePost: action.payload\r\n            }\r\n\r\n        case types.activeComment:\r\n            return {\r\n                ...state,\r\n                activeComment: action.payload\r\n            }\r\n\r\n        case types.desactiveComment:\r\n            return {\r\n                ...state,\r\n                activeComment: null\r\n            }\r\n\r\n        case types.commentUpdated:\r\n            return {\r\n                ...state,\r\n                activePost: action.payload\r\n            }\r\n\r\n        case types.commentDeleted:\r\n            return {\r\n                ...state,\r\n                activePost: action.payload,\r\n                activeComment: null\r\n            }\r\n\r\n        case types.hasNextPage:\r\n            return {\r\n                ...state,\r\n                hasNextPage: action.payload\r\n            }\r\n\r\n        case types.blogLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n                postPage: 1,\r\n                userPage: 1,\r\n                activePost: null,\r\n                activeComment: null,\r\n                isLoading: false,\r\n                activePostloading: true,\r\n                postNew: false,\r\n                search: true,\r\n                hasNextPage: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n    modalDeleteOpen: false,\r\n    modalCommentOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        case types.uiOpenDeleteModal:\r\n            return {\r\n                ...state,\r\n                modalDeleteOpen: true\r\n            }\r\n\r\n        case types.uiCloseDeleteModal:\r\n            return {\r\n                ...state,\r\n                modalDeleteOpen: false\r\n            }\r\n\r\n        case types.uiOpenCommentModal:\r\n            return {\r\n                ...state,\r\n                modalCommentOpen: true\r\n            }\r\n\r\n        case types.uiCloseCommentModal:\r\n            return {\r\n                ...state,\r\n                modalCommentOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport { authReducer } from \"./authReducer\"\r\nimport { blogReducer } from \"./blogReducer\"\r\nimport { uiReducer } from \"./uiReducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    blog: blogReducer,\r\n    ui: uiReducer,\r\n})","import thunk from 'redux-thunk';\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import AppRouter from \"./routers/AppRouter\"\n\nimport { Provider } from \"react-redux\"\nimport { store } from \"./store/store\"\n\nconst BlogApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default BlogApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BlogApp from './BlogApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BlogApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}